{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sharleen/Desktop/PICKI-APP/picki/app/components/arrowButton/ArrowButton.js"],"sourcesContent":["'use client';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\nimport '../arrowButton/ArrowButton.css';\n\nexport default function ArrowButton({ direction = 'right', onClick, disabled = false }) {\n  const Icon = direction === 'left' ? ChevronLeft : ChevronRight;\n\n  return (\n    <button className=\"nav-button\" onClick={onClick} disabled={disabled}>\n      <Icon size={45} strokeWidth={3} />\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AADA;;;;AAIe,SAAS,YAAY,EAAE,YAAY,OAAO,EAAE,OAAO,EAAE,WAAW,KAAK,EAAE;IACpF,MAAM,OAAO,cAAc,SAAS,uNAAA,CAAA,cAAW,GAAG,yNAAA,CAAA,eAAY;IAE9D,qBACE,6LAAC;QAAO,WAAU;QAAa,SAAS;QAAS,UAAU;kBACzD,cAAA,6LAAC;YAAK,MAAM;YAAI,aAAa;;;;;;;;;;;AAGnC;KARwB","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///Users/sharleen/Desktop/PICKI-APP/picki/app/components/eventTimePicker/eventTimePicker.js"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { StaticDateTimePicker } from '@mui/x-date-pickers/StaticDateTimePicker';\nimport { LocalizationProvider} from '@mui/x-date-pickers';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { TextField } from '@mui/material';\n\nexport default function EventTimePicker() {\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  const handleDateChange = (newValue) => {\n    setSelectedDate(newValue);\n  };\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <div className=\"time-picker\">\n        <StaticDateTimePicker\n          displayStaticWrapperAs=\"desktop\" // Or \"mobile\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          views={['day', 'hours', 'minutes']}\n          renderInput={(props) => <TextField {...props} />}\n        />\n        <div className=\"event-time\">\n          <p>{selectedDate ? selectedDate.toString() : \"No date selected\"}</p>\n        </div>\n      </div>\n    </LocalizationProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAQe,SAAS;;IACtB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,mBAAmB,CAAC;QACxB,gBAAgB;IAClB;IAEA,qBACE,6LAAC,uMAAA,CAAA,uBAAoB;QAAC,aAAa,2LAAA,CAAA,iBAAc;kBAC/C,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,uMAAA,CAAA,uBAAoB;oBACnB,wBAAuB,UAAU,cAAc;;oBAC/C,OAAO;oBACP,UAAU;oBACV,OAAO;wBAAC;wBAAO;wBAAS;qBAAU;oBAClC,aAAa,CAAC,sBAAU,6LAAC,6MAAA,CAAA,YAAS;4BAAE,GAAG,KAAK;;;;;;;;;;;8BAE9C,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;kCAAG,eAAe,aAAa,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;AAKvD;GAvBwB;KAAA","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/sharleen/Desktop/PICKI-APP/picki/app/events/time/page.js"],"sourcesContent":["'use client'; // Mark this as a client-side component\n\nimport { useState } from 'react';\nimport Link from 'next/link'; // Import Link component for navigation\nimport ArrowButton from '../../components/arrowButton/ArrowButton';\nimport EventTimePicker from '../../components/eventTimePicker/eventTimePicker';\nimport { X } from 'lucide-react';\nimport '../events.css';\n\n\nexport default function EventTimePage() {\n  const [selectedDate, setSelectedDate] = useState('');\n  const [eventTime, setEventTime] = useState('');\n\n  return (\n    <div className=\"event-creator-container\">\n      <div className=\"mobile-frame\">\n        <div className=\"event-page\">\n           <div className=\"close-button-container\">\n            <X size={18} strokeWidth={3} className=\"close-icon\" />\n          </div>\n          <div className=\"create-event-form\">\n            <h1>Event Time</h1>\n            <p className=\"subtitle\">Pick when your event will happen.</p>\n\n           \n            <EventTimePicker\n              selectedDate={selectedDate}\n              setSelectedDate={setSelectedDate}\n              setEventTime={setEventTime}\n            />\n          </div>\n\n         {/* Navigation Buttons */}\n          <div className=\"event-nav\">\n            <Link href='/events'>\n              <ArrowButton direction=\"left\" /> {/* Navigate back to EventPage */}\n            </Link>\n            <Link href=\"\">\n              <ArrowButton direction=\"right\" /> {/* Navigate to Event Summary page */}\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA,oRAA8B,uCAAuC;AACrE;AACA;AACA;;;AANA,cAAc,uCAAuC;;;;;;;AAUtC,SAAS;;IACtB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACZ,6LAAC;wBAAI,WAAU;kCACd,cAAA,6LAAC,+LAAA,CAAA,IAAC;4BAAC,MAAM;4BAAI,aAAa;4BAAG,WAAU;;;;;;;;;;;kCAEzC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;gCAAE,WAAU;0CAAW;;;;;;0CAGxB,6LAAC,0JAAA,CAAA,UAAe;gCACd,cAAc;gCACd,iBAAiB;gCACjB,cAAc;;;;;;;;;;;;kCAKlB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;;kDACT,6LAAC,kJAAA,CAAA,UAAW;wCAAC,WAAU;;;;;;oCAAS;;;;;;;0CAElC,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;;kDACT,6LAAC,kJAAA,CAAA,UAAW;wCAAC,WAAU;;;;;;oCAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO/C;GApCwB;KAAA","debugId":null}}]
}