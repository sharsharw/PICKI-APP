{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/sharleen/Desktop/PICKI-APP/picki/app/events/confirm/page.js"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useRouter } from 'next/navigation'; // Import useRouter for programmatic navigation\nimport Link from 'next/link';\nimport { ChevronLeft } from 'lucide-react';\nimport EventNav from '../../components/eventNav/e'; // Import the new EventNav component\nimport '../events.css';\nimport './confirm.css';\n\nexport default function EventConfirmationPage() {\n  const router = useRouter(); // Initialize the router for navigation\n  \n  const eventData = {\n    title: \"Girl's Night\",\n    type: \"Food\",\n    date: \"April 12, 2025\",\n    rsvpDeadline: \"April 2nd 2025\"\n  };\n\n  const selectedGroup = {\n    name: 'Boba Babies',\n    image: '/images/bobababies-large.png',\n    color: '#FFE0EE',\n    members: [\n      { id: 1, profilePic: '/images/user1.png' },\n      { id: 2, profilePic: '/images/user2.png' },\n      { id: 3, profilePic: '/images/user3.png' },\n      { id: 4, profilePic: '/images/user4.png' },\n    ]\n  };\n  \n  // Handle step changes in the EventNav\n  const handleStepChange = (step) => {\n    // Navigate based on the step\n    switch(step) {\n      case 1:\n        router.push('/events');\n        break;\n      case 2:\n        router.push('/events/time');\n        break;\n      case 3:\n        router.push('/events/rsvp');\n        break;\n      case 4:\n        router.push('/events/cover');\n        break;\n      case 5:\n        router.push('/events/invite');\n        break;\n      case 6:\n        // Current page - no navigation needed\n        break;\n      default:\n        break;\n    }\n  };\n  \n  // Handle confirm button click\n  const handleConfirm = () => {\n    // Navigate to success page or wherever the final confirmation should go\n    router.push('/events/success');\n  };\n\n  return (\n    <div className=\"event-creator-container\">\n      <div className=\"mobile-frame\">\n        <div className=\"event-page\">\n          {/* Header */}\n          <div className=\"confirmation-header\">\n            <Link href=\"/events/invite\" className=\"back-button\">\n              <ChevronLeft size={20} strokeWidth={3} />\n            </Link>\n          </div>\n          <div className=\"confirmation-content\">\n            <h1 className=\"confirmation-title\">Confirm</h1>\n            <p className=\"confirmation-subtitle\">Review your choices!</p>\n            \n            {/* Event Details */}\n            <div className=\"event-details\">\n              <h2 className=\"event-title\">{eventData.title}</h2>\n              \n              <div className=\"event-info-row\">\n                <span className=\"event-info-label\">Type:</span>\n                <span className=\"event-info-value\">{eventData.type}</span>\n              </div>\n              \n              <div className=\"event-info-row\">\n                <span className=\"event-info-label\">Date:</span>\n                <span className=\"event-info-value\">{eventData.date}</span>\n              </div>\n              \n              <div className=\"event-info-row\">\n                <span className=\"event-info-label\">RSVP deadline:</span>\n                <span className=\"event-info-value\">{eventData.rsvpDeadline}</span>\n              </div>\n            </div>\n            \n            {/* Group Information */}\n            <div className=\"group-section\">\n              <h3 className=\"group-section-title\">Group Name</h3>\n              \n              <div className=\"group-preview\">\n                <div className=\"group-image-container\">\n                  <img \n                    src={selectedGroup.image} \n                    alt={selectedGroup.name} \n                    className=\"group-preview-image\"\n                    onError={(e) => {\n                      e.target.onerror = null;\n                      e.target.src = '/images/groups/default.jpg';\n                    }}\n                  />\n                  <div className=\"group-preview-name\" style={{ backgroundColor: selectedGroup.color }}>\n                    {selectedGroup.name}\n                  </div>\n                </div>\n                \n                <div className=\"group-members\">\n                  {selectedGroup.members.map(member => (\n                    <div key={member.id} className=\"member-avatar\">\n                      <img \n                        src={member.profilePic} \n                        alt=\"Group member\" \n                        onError={(e) => {\n                          e.target.onerror = null;\n                          e.target.src = '/images/profiles/default.jpg';\n                        }}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n            \n            {/* Confirm Button */}\n            <button className=\"confirm-button\" onClick={handleConfirm}>\n              Confirm\n            </button>\n          </div>\n          \n          {/* Add the EventNav component */}\n          <div className=\"event-nav-bottom-bar\">\n            <EventNav \n              totalSteps={6} \n              currentStep={6} // This is the final step in the flow\n              onStepChange={handleStepChange} \n            />\n            <div className=\"event-nav-line\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}